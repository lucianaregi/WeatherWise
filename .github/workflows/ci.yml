name: WeatherWise CI
on:
  push:
    branches: 
      - main
      - develop
      - 'feature/**'
      - 'release/**'
      - 'hotfix/**'
  pull_request:
    branches: 
      - main
      - develop
permissions:
  contents: write
  pull-requests: write
  checks: write
  actions: read
  security-events: write
  deployments: write
  packages: write
  statuses: write
  issues: write
env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_PATH: 'WeatherWise/WeatherWise.sln'
  API_PROJECT_PATH: 'WeatherWise/WeatherWise.Api/WeatherWise.Api.csproj'
  OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Validate branch name
      if: github.event_name == 'pull_request'
      run: |
        if [[ "${{ github.base_ref }}" == "main" && "${{ github.head_ref }}" != "develop" ]]; then
          echo "Error: Pull requests to main branch are only allowed from develop branch"
          exit 1
        fi

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Cache test results
      uses: actions/cache@v3
      with:
        path: |
          WeatherWise/TestResults
          WeatherWise/coverage
        key: ${{ runner.os }}-testresults-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-testresults-

    - name: Restore dependencies
      working-directory: WeatherWise
      run: dotnet restore WeatherWise.sln

    - name: Build
      working-directory: WeatherWise
      run: dotnet build WeatherWise.sln --configuration Release --no-restore

    - name: Test with coverage
      working-directory: WeatherWise
      run: |
        dotnet test WeatherWise.sln \
          --configuration Release \
          --no-build \
          --verbosity normal \
          /p:CollectCoverage=true \
          /p:CoverletOutput=./TestResults/coverage/ \
          /p:CoverletOutputFormat=opencover \
          --results-directory TestResults \
          --logger "trx;LogFileName=test-results.trx"

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          WeatherWise/TestResults
          WeatherWise/TestResults/coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v2
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        # Usar o arquivo de cobertura gerado pelo Coverlet
        file: ./WeatherWise/TestResults/coverage/coverage.opencover.xml
        # Enviar dados brutos para o Codecov
        flags: codecov
        # Opcional: especificar o nome do reposit√≥rio
        name: weatherwise
        # Opcional: especificar o commit SHA
        commit: ${{ github.sha }}

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: .NET Tests
        path: WeatherWise/TestResults/*.trx
        reporter: dotnet-trx
        fail-on-error: true

    - name: Build Docker image
      working-directory: WeatherWise
      run: |
        docker build \
          --build-arg OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }} \
          -f Dockerfile \
          -t weatherwise:${{ github.sha }} .

    - name: Create Pull Request
      if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '[Automated] Merge develop into main',
              body: `## Automated Pull Request
              
              This PR was automatically created to merge changes from \`develop\` into \`main\`.
              
              ### üîç Review Checklist
              - [ ] All tests passing
              - [ ] Code reviewed
              - [ ] No breaking changes
              - [ ] Documentation updated
              
              ### üìù Changes Include
              - Commits from develop branch
              
              Please review and merge if everything looks good.`,
              head: 'develop',
              base: 'main'
            });
            console.log(`Pull Request created: ${pr.html_url}`);
          } catch (error) {
            if (error.status === 422) {
              console.log('Pull request already exists');
            } else {
              throw error;
            }
          }